[JOB_PARAMS]

env_name = ['crossing']
env_grid_size = [25]
num_steps = [100]

static_env_grid = [0]
obs_win_size = [1]
end_on_goal = [1]
config_seed = [18]
; config_seed = [37]
agent_view_size = [5]
; spawn_curriculum = ['center']
spawn_curriculum = ['fixed']
; spawn_curriculum = ['random']
reset_prob = [1.0]
perturb_prob = [0.1]
reset_adaptive = [0]
term_prob = [1e-4]
recurrent_policy = [1]
recurrent_encoder = [1]
reward_scale = [30]
use_td = [1]
critic_detach = [0]

num_eval_episodes = [128]

model = ['cond']

hier_mode = ['bonus']
; bonus_beta = [0.02333]
; bonus_beta = [0.05789]
; bonus_beta = [0.1]
; bonus_beta = [0.1]
; bonus_beta = [0.0]
; bonus_beta = [1.0]
; bonus_heuristic_beta = [10.0]
bonus_heuristic_beta = [0]
; bonus_heuristic_beta = [0.1]
; bonus_beta = [0.00386]
; bonus_beta = [1e-3]
bonus_beta = [1e-2]
; bonus_beta = [0.005]
; bonus_beta = [1e-5]
; bonus_beta = [0.1]
; bonus_beta = [0]
; bonus_type = ['count']
bonus_type = ['kl']
; bonus_type = ['kl-pi']
bonus_normalization = ['unnormalized']
; bonus_normalization = ['max_min']
bonus_noise_scale = [0.0]
; bonus_noise_scale = [0.001788]
; bonus_noise_scale = [0.0075]
; bonus_noise_scale = [0.00875]

ic_mode = ['vic']
; ic_mode = ['diyan']
; ic_mode = ['valor']
; option_space = ['continuous']
option_space = ['discrete']
omega_option_dims = [32]
use_omega_dim_curriculum = [1]
omega_curr_win_size = [200]
omega_traj_ll_theta = [0.75]
reweight_by_omega_ll = [0]
; omega_option_dims = [32]

use_infobot = [0]
z_stochastic = [1]
; infobot_beta = [0]
infobot_beta = [1e-3]
infobot_beta_min = [1e-6]
infobot_beta_curriculum = ['auto-10-250']
; infobot_beta_curriculum = ['0-0']
ib_adaptive = [0]
ib_kl_mode = ['analytic']
z_latent_dims = [128]

; use_max_ent = [0]
use_max_ent = [1]
; entropy-coef = [0.01]
; max_ent_action_logprob_coeff = [0.0]
; max_ent_action_logprob_coeff = [1]
max_ent_action_logprob_coeff = [1e-3]

hr_model_kl_coeff = [1.0]
; hr_model_kl_coeff = [1e-3]
; hr_model_kl_coeff = [0]

q_start_epochs = [0]
; kl_optim_mode = ['analytic']
kl_optim_mode = ['mc_sampling']
kl_anneal_start_epochs = [0]
kl_anneal_growth_epochs = [0]

algo = ['a2c']
gamma = [0.99]
normalize_advantage = [1]

; lr = [1e-4] # Too less but converges
; lr = [2.5e-4] # Converges with same rate as 1e-4
lr = [7e-4]
; lr = [0.001] # Too high, didn't converge
traj_enc_loss_coeff = [1.0]

base_model = ['cnn-mlp']
; base_model = ['mlp']

z_std_clip_max = [2]
hr_goal_encoder_type = ['single']
grid_obs_type = ['grid']
spike_value = [0]
terminal_reward  = [0]
num_processes = [64]
; num_processes = [2]
num_agents = [1]
max_val_envs = [2]
ppo_version = ['default']
; ppo_version = ['ppo-with-options']
skip_eval = [0]
test_recall = [0]
max_train_envs = [0]
max_targets_per_env = [0]
save-interval = [10000]
; save-interval = [20]

options_decoder_input = ['goal_and_initial_state']
; options_decoder_input = ['goal_only']

traj_encoder_input = ['final_and_initial_state']
; traj_encoder_input = ['final_state']

; attr_embed_size = [16]
attr_embed_size = [128]
hidden_size = [128]

ac_start_from = ['']

; 
; 

; IB-epz
; 

; VIC-epz



; heatmap-interval = [400]
; log-interval = [400]
heatmap-interval = [20]
log-interval = [5]
; log-interval = [20]
; val_interval = [25000]
val_interval = [9999999999]
; val_interval = [100000]
num-episodes = [3.5e8]
; total_training_steps = [100000]
total_training_steps = [99999999999]
; server = ['localhost']
; port = [8895]
; log-interval = [1]
; seed = [5193]
; seed = [430]
seed = [128]

[SCRIPT_PARAMS]
run_file = "train_minigrid.py"
wait = True
redirect_stdout = False
slurm_queue_type = "noslurm"
common_save_subdir = False
; 

visdom_env_name = "debug-lava-bonus-3-vic-{bonus_type}-{bonus_beta}"
; visdom_env_name = "debug-vis"
cuda_launch_blocking = False
